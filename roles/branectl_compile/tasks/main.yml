--- 
- name: Check if branectl works
  command: branectl --help
  register: branectl_result
  ignore_errors: true


- name: Install Rust setup
  get_url:
    url: https://sh.rustup.rs
    dest: /tmp/rustup.sh
  changed_when: false
  when: branectl_result is failed


  ## might have to run this interanaly 
- name: Execute Rustup installation script
  command: sh /tmp/rustup.sh --profile minimal -y
  become: false
  when: branectl_result is failed

# - name: Unconditionally reboot the machine with all defaults
#   ansible.builtin.reboot:
#     msg: "Rebooting machine"
#   when: branectl_result is failed
    
- name: Install related packages
  apt:
    name: 
      - gcc
      - g++    
      - make
      - cmake
      - pkg-config
      - libssl-dev
      - sqlite3
      - libsqlite3-dev
    state: present
    update_cache: yes
  when: branectl_result is failed

- name: check if cargo works 
  command: cargo 
  ignore_errors: true
  register: cargofail

- name: link cargo and /etc/hosts
  command: ln -s /home/{{hostvars['server1']['ansible_user']}}/.cargo/bin/{{ item }} /usr/local/bin/
  loop:
    - cargo
    - rustc
    - rustup
  when: branectl_result is failed and cargofail is failed

## if it breaks here restart vm or install rust manualy 
- name: check if cargo works again
  command: cargo 
  when: cargofail is failed
# # ln -s /opt/cargo/bin/cargo /usr/local/bin/
# # ln -s /opt/cargo/bin/rustc /usr/local/bin/
# # ln -s /opt/cargo/bin/rustup /usr/local/bin/

- name: Get repo
  ansible.builtin.git:
    repo:  https://github.com/epi-project/brane
    dest:  ./brane
    version: "{{BRANE_VERSION}}"
  become: false
  when: branectl_result is failed


- name:  compile brane ctl
  # command: python3 ./make.py ctl
  command: make ctl PROFILE=release
  args:                                                                     
    chdir: "./brane"
  register: result1
  when: branectl_result is failed


- name: move build to bin
  copy: 
    src: /home/{{hostvars['server1']['ansible_user']}}/brane/target/release/branectl
    dest: /usr/local/bin/
    mode: '0755'
    remote_src: true
  when: branectl_result is failed


- name: ensure all services are stoped if they were running before(error is fine)
  command: branectl stop
  ignore_errors: true
  when: branectl_result is not failed



